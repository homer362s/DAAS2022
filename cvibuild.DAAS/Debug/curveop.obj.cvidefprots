[curveop_Init]
Class="Function"
Prototype="void curveop_Init();"

[BatchSplineInterpCallback]
Class="Function"
Prototype="int BatchSplineInterpCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[SplineInterpCallback]
Class="Function"
Prototype="int SplineInterpCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[curveop_SplineInterpCurve]
Class="Function"
Prototype="int curveop_SplineInterpCurve(double *spline, double *x, double *y, int offset, int pts, int i_pts, double *i_x, double *i_y);"

[BatchRatInterpCallback]
Class="Function"
Prototype="int BatchRatInterpCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[RatInterpCallback]
Class="Function"
Prototype="int RatInterpCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[curveop_RatInterpCurve]
Class="Function"
Prototype="int curveop_RatInterpCurve(double *x, double *y, int offset, int pts, int i_pts, double *i_x, double *i_y);"

[BatchPolyInterpCallback]
Class="Function"
Prototype="int BatchPolyInterpCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[KeepInterpCurveCallback]
Class="Function"
Prototype="int KeepInterpCurveCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[PolyInterpCallback]
Class="Function"
Prototype="int PolyInterpCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[curveop_PolyInterpCurve]
Class="Function"
Prototype="int curveop_PolyInterpCurve(double *x, double *y, int offset, int pts, int i_pts, double *i_x, double *i_y);"

[InterpControlCallback]
Class="Function"
Prototype="int InterpControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitInterpCallback]
Class="Function"
Prototype="void InitInterpCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdateInterpPanel]
Class="Function"
Prototype="void UpdateInterpPanel(curveType *curve, int input);"

[PolyFitCallback]
Class="Function"
Prototype="int PolyFitCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[PolyFitControlCallback]
Class="Function"
Prototype="int PolyFitControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitPolyFitCallback]
Class="Function"
Prototype="void InitPolyFitCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdatePolyFitPanel]
Class="Function"
Prototype="void UpdatePolyFitPanel(curveType *curve, int input);"

[ExpFitCallback]
Class="Function"
Prototype="int ExpFitCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[ExpFitControlCallback]
Class="Function"
Prototype="int ExpFitControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitExpFitCallback]
Class="Function"
Prototype="void InitExpFitCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdateExpFitPanel]
Class="Function"
Prototype="void UpdateExpFitPanel(curveType *curve, int input);"

[LinFitCallback]
Class="Function"
Prototype="int LinFitCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[LinFitControlCallback]
Class="Function"
Prototype="int LinFitControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitLinFitCallback]
Class="Function"
Prototype="void InitLinFitCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdateLinFitPanel]
Class="Function"
Prototype="void UpdateLinFitPanel(curveType *curve, int input);"

[PowerSpecBatchCallback]
Class="Function"
Prototype="int PowerSpecBatchCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[PowerFreqEstimateCallback]
Class="Function"
Prototype="int PowerFreqEstimateCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[PowerSpecCallback]
Class="Function"
Prototype="int PowerSpecCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[PowerSpecControlCallback]
Class="Function"
Prototype="int PowerSpecControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitPowerSpecCallback]
Class="Function"
Prototype="void InitPowerSpecCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdatePowerSpecPanel]
Class="Function"
Prototype="void UpdatePowerSpecPanel(curveType *curve, int input);"

[InitAmpSpecBatchCallback]
Class="Function"
Prototype="int InitAmpSpecBatchCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[AmpSpecBatchCallback]
Class="Function"
Prototype="int AmpSpecBatchCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[KeepPhaseCurveCallback]
Class="Function"
Prototype="int KeepPhaseCurveCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[KeepAmpCurveCallback]
Class="Function"
Prototype="int KeepAmpCurveCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[AmpPhaseCallback]
Class="Function"
Prototype="int AmpPhaseCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[Window_Compute_IIR]
Class="Function"
Prototype="int Window_Compute_IIR(double *y, int pts, double *win_y, char *note);"

[AmpPhaseControlCallback]
Class="Function"
Prototype="int AmpPhaseControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitAmpPhaseCallback]
Class="Function"
Prototype="void InitAmpPhaseCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdateAmpPhasePanel]
Class="Function"
Prototype="void UpdateAmpPhasePanel(curveType *curve, int input);"

[ACDCCallback]
Class="Function"
Prototype="int ACDCCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitACDCCallback]
Class="Function"
Prototype="void InitACDCCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdateACDCPanel]
Class="Function"
Prototype="void UpdateACDCPanel(curveType *curve, int input);"

[BatchSmoothCallback]
Class="Function"
Prototype="int BatchSmoothCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[SmoothCallback]
Class="Function"
Prototype="int SmoothCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[curveop_Smooth]
Class="Function"
Prototype="int curveop_Smooth(double *kernal, int k_pts, double *y, int c_pts, int offset, int pts, double *smooth_y);"

[curveop_SmoothingKernal]
Class="Function"
Prototype="int curveop_SmoothingKernal(int pts, double variance, double *kernal);"

[SmoothControlCallback]
Class="Function"
Prototype="int SmoothControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitSmoothCallback]
Class="Function"
Prototype="void InitSmoothCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdateSmoothPanel]
Class="Function"
Prototype="void UpdateSmoothPanel(curveType *curve, int input);"

[BatchFilterCallback]
Class="Function"
Prototype="int BatchFilterCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[FilterCallback]
Class="Function"
Prototype="int FilterCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[Filter_Compute]
Class="Function"
Prototype="int Filter_Compute(double fs, int pts, double *y, double *filter_y, char *note);"

[FilterControlCallback]
Class="Function"
Prototype="int FilterControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitFilterCallback]
Class="Function"
Prototype="void InitFilterCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdateFilterPanel]
Class="Function"
Prototype="void UpdateFilterPanel(curveType *curve, int input);"

[Filter_Init_Mode]
Class="Function"
Prototype="void Filter_Init_Mode();"

[Filter_Init_Type]
Class="Function"
Prototype="void Filter_Init_Type();"

[AscendingSortCallback]
Class="Function"
Prototype="int AscendingSortCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[DescendingSortCallback]
Class="Function"
Prototype="int DescendingSortCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitSortCallback]
Class="Function"
Prototype="void InitSortCallback(int menubar, int menuItem, void *callbackData, int panel);"

[ReverseCallback]
Class="Function"
Prototype="int ReverseCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitReverseCallback]
Class="Function"
Prototype="void InitReverseCallback(int menubar, int menuItem, void *callbackData, int panel);"

[BatchDifferenceCallback]
Class="Function"
Prototype="int BatchDifferenceCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[BatchIntegrateCallback]
Class="Function"
Prototype="int BatchIntegrateCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[DifferenceCallback]
Class="Function"
Prototype="int DifferenceCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[IntegrateCallback]
Class="Function"
Prototype="int IntegrateCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[IntegDiffControlCallback]
Class="Function"
Prototype="int IntegDiffControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitIntegDiffCallback]
Class="Function"
Prototype="void InitIntegDiffCallback(int menubar, int menuItem, void *callbackData, int panel);"

[UpdateIntegDiffPanel]
Class="Function"
Prototype="void UpdateIntegDiffPanel(curveType *curve, int input);"

[InitOffsetCallback]
Class="Function"
Prototype="void InitOffsetCallback(int menubar, int menuItem, void *callbackData, int panel);"

[BatchControlCallback]
Class="Function"
Prototype="int BatchControlCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[InitBatchCallback]
Class="Function"
Prototype="int InitBatchCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[CreateY2CurveCallback]
Class="Function"
Prototype="int CreateY2CurveCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[CreateY1CurveCallback]
Class="Function"
Prototype="int CreateY1CurveCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[CurveOpWindowCallback]
Class="Function"
Prototype="int CurveOpWindowCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[CurveOpSelectCurveCallback]
Class="Function"
Prototype="int CurveOpSelectCurveCallback(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

